// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Partner.GRPC.Data;

#nullable disable

namespace Partner.GRPC.Migrations
{
    [DbContext(typeof(PartnerContext))]
    partial class PartnerContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.8");

            modelBuilder.Entity("Partner.GRPC.Models.Lab", b =>
                {
                    b.Property<string>("LabId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("LabName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("LabType")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Manager")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("TaxCode")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Website")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Zip")
                        .HasColumnType("INTEGER");

                    b.HasKey("LabId");

                    b.ToTable("Labs");

                    b.HasData(
                        new
                        {
                            LabId = "ec62634f-d4a8-46a5-a109-50387f7eb198",
                            Address = "",
                            City = "Miami",
                            Country = "",
                            Email = "",
                            LabName = "LAB ONE",
                            LabType = "Specimen",
                            Manager = "",
                            Phone = "999-888-3333",
                            State = "FL",
                            TaxCode = 999999,
                            Website = "",
                            Zip = 33154
                        },
                        new
                        {
                            LabId = "2dc061ed-0e08-472f-b8e2-607aa88f9093",
                            Address = "",
                            City = "Phoenix",
                            Country = "",
                            Email = "",
                            LabName = "LAB TWO",
                            LabType = "Blood",
                            Manager = "",
                            Phone = "444-222-7777",
                            State = "AZ",
                            TaxCode = 888888,
                            Website = "",
                            Zip = 85132
                        });
                });

            modelBuilder.Entity("Partner.GRPC.Models.Shipper", b =>
                {
                    b.Property<string>("ShipperId")
                        .HasColumnType("TEXT");

                    b.Property<string>("ShipperName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("TrackingLink")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("ShipperId");

                    b.ToTable("Shippers");

                    b.HasData(
                        new
                        {
                            ShipperId = "c00aa010-5043-47f0-bb98-fbc97f6f0654",
                            ShipperName = "FedEx",
                            TrackingLink = "www.fedex.com/tracking/"
                        },
                        new
                        {
                            ShipperId = "08d0603a-3500-436d-9dd7-1b432f15ad70",
                            ShipperName = "USPS",
                            TrackingLink = "www.usps.com/tracking/"
                        },
                        new
                        {
                            ShipperId = "6192f1a2-1976-40ee-a9c4-9b0bd74f9c7f",
                            ShipperName = "UPS",
                            TrackingLink = "www.ups.com/tracking/"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
